# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1


n = int(input("Введите элемент - n "))
m = int(input("Введите элемент - m "))





def fibo(m, n):
    f = [1, 1]
    for i in range(2, m + 1):
        f.append(f[i-1] + f[i-2])
    #print(f)
    return f[n:m]


print(fibo(m,n))




# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()



#sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0])

def sort_to_max(nums):
    # Устанавливаем swapped в True, чтобы цикл запустился хотя бы один раз
    start = True
    while start:
        start = False
        for i in range(len(nums) - 1):
            if nums[i] > nums[i + 1]:
                # Меняем элементы
                nums[i], nums[i + 1] = nums[i + 1], nums[i]
                # Устанавливаем swapped в True для следующей итерации
                start = True


origin_list = [2, 10, -12, 2.5, 20, -11, 4, 4, 0]
sort_to_max(origin_list)
print(origin_list)



# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.
#



y = [1,-4,6,8,-10,-2,4,10]

def func(x):
    if x > 0:
        return 1
    else:
        return 0

def analof_list(fnc, a):
    resault = []
    if (type(a) == list):
        for i in a:
            if (fnc(i) == True):
                resault.append(i)
    return resault

b = analof_list(func, y)
print(b)


# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

#Решение данной задачи честно смотрел в интернете.



a1 = [1,1]
a2 = [2,3]
a3 = [4,1]
a4 = [1,3]

if (a1[1] == a4[1] and  (a2[1] == a3[1]) and (abs(a1[0] - a2[0]) == abs(a3[0] - a4[0]))):
    print("ТОчки являются вершинами")
else:
    print("Точки не являются вершинами")





